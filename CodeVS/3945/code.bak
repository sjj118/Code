var
	next:array[1..1000001]of longint;
	n,m,i,j,k,ans,l:longint;
	s,sub,t:array[0..1000001]of longint;

	procedure get_next;
	var
		i,j:longint;
	begin
		j:=0;
		next[1]:=0;
		for i:=2 to n do begin
			while (j>0)and(sub[i]<>sub[j+1]) do j:=next[j];
			if sub[i]=sub[j+1] then inc(j);
			next[i]:=j;
		end;
	end;

	procedure kmp;
	var
		i,j:longint;
	begin
		get_next;
		j:=0;
		ans:=0;
		for i:=1 to m do begin
		        while (j>0)and(s[i]<>sub[j+1]) do j:=next[j];
			if s[i]=sub[j+1] then inc(j);
			if j=n then begin
				inc(ans);
				j:=next[j];
			end;
		end;
	end;
begin
	readln(n,m);
	ans:=0;
	for i:=1 to n do read(sub[i]);readln;
	for i:=1 to m do read(s[i]);
	for i:=1 to n-1 do sub[i]:=sub[i+1]-sub[i];
	for i:=1 to m-1 do s[i]:=s[i+1]-s[i];
	get_next;
	n:=n-1;
	m:=m-1;
	i:=1;
	while i<=m do begin
		j:=i;
		while (s[j]=0)and(j<=m) do inc(j);
		if j-i>=n then ans:=ans+j-i+1-n;
		i:=j+1;
	end;
	ans:=ans*2;
	kmp;
	t:=sub;
	for i:=1 to n do sub[i]:=t[n-i+1];
        kmp;
	writeln(ans);
end.
